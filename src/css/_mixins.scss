


//flex-box mixins******

//flex-wrap: nowrap | wrap | wrap-reverse;
//flex-direction: row | row-reverse | column | column-reverse;
//justify-content: flex-start | flex-end | center | space-between | space-around;
//align-content: stretch|center|flex-start|flex-end|space-between|space-around|initial|inherit;
//align-items: stretch|center|flex-start|flex-end|baseline|initial|inherit;

@mixin flexBox($justify:space-between, $align-items:center, $align-content:space-between, $wrap:wrap, $direction: row){

	display:-ms-flexbox;
	display:-moz-box;
	display:-webkit-box;
	display:-webkit-flex;
	display:flex;
	
	
	-webkit-flex-wrap:$wrap;
	flex-wrap:$wrap;

	-moz-align-content:$align-content;
	-ms-align-content:$align-content;
	-webkit-align-content:$align-content;
	align-content:$align-content;
	
  	-moz-box-pack: $justify;
	-ms-flex-pack: $justify;
	-webkit-justify-content:$justify;
	justify-content:$justify;

	-webkit-align-items:$align-items;
	-webkit-box-align:$align-items;
	align-items:$align-items;

	-webkit-flex-direction:$direction;
	flex-direction:$direction;

	

}

@mixin transition($transition){
	-webkit-transition: $transition;
	transition: $transition;
}

@mixin transform($rotate:null, 
					$scale:1,
					$translateX:0, 
					$translateY:0, 
					$translateZ:0, 
					$origin:null, 
					$rotateX:null,
					$rotateY:null,
					$rotateZ:null, 
					$scaleX:null,
					$scaleY:null,
					$scaleZ:null
					){
	$rotation:();
	@if $rotateX{
		$rotation: rotateX($rotateX);
	}@else if $rotate{
		$rotation: rotate($rotate);
	}@else{
		$rotation: rotate(0deg);
	}

	
	 -ms-transform: $rotation scale($scale) translateX($translateX) translateY($translateY) translateZ($translateZ);
    -ms-transform-origin: $origin;
    -webkit-transform: $rotation scale($scale) translateX($translateX) translateY($translateY) translateZ($translateZ); 
    -webkit-transform-origin: $origin; 
    transform: $rotation scale($scale) translateX($translateX) translateY($translateY) translateZ($translateZ);

}
@mixin perspective($persective){
	-webkit-perspective: 1000px;
	perspective: 1000px;
}
@mixin animateLeft($name, $perc){

	&.#{$name}{

		animation:goLeft#{$name} 1.5s ease-out .5s 1;
		transition:1.5s;
		transition-timing-function:ease-out;
	}

@keyframes goLeft#{$name}{
				0%{
					left:0;
				}
				100%{
					left:$perc;
				}
		}
}

@mixin gradient($type:linear, $colors:(red,white,blue), $direction:left){
	background: -webkit-linear-gradient($direction, $colors); 
    background: -o-linear-gradient($direction, $colors); 
    background: -moz-linear-gradient($direction, $colors);
    background: -ms-linear-gradient($direction, $colors);
    background: linear-gradient($direction, $colors); 

}//gradient

@mixin screen($smaller, $size){
	@if($size == 'xs'){
		@media only screen and (max-width: 768px) {
			@content;
		} 
	}@else if($smaller){
		@if($size == 'md'){
			@media only screen and (max-width: 1200px) {
				@content;
			}
		} @else if($size == 'md'){
			@media only screen and (max-width: 992px) {
				@content;
			}
		} @else if($size == 'sm'){
			@media only screen and (max-width: 768px) {
				@content;
			}
		} 
	} @else {
		@if($size == 'md'){

			@media only screen and (min-width: 1200px) {
				@content;
			}
		} @else if($size == 'md'){

			@media only screen and (min-width: 992px) {
				@content;
			}
		} @else if($size == 'sm'){
			@media only screen and (min-width: 768px) {
				@content;
			}
		}	

	}

}

